/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
/**
\page createPackPublish Publish a Pack
There are multiple ways to distribute a software pack:

\section cp_prerequisites Prerequisites

Before you start to distribute a software pack, you need to make sure that it does not contain errors. A good start is an
error and warning free run of \ref bash_script "gen_pack.sh" that does not show any
<a href="https://github.com/Open-CMSIS-Pack/devtools/tree/main/tools/packchk"><b>packchk</b></a> errors and
\ref cp_Editors_xmllint "validates the XML" of the PDSC file.

\note XML validation is important when the pack should published using a \ref cp_KeilComPack "pack index service". The pack
  importer will ignore all \elem{vendor}.\elem{name}.pdsc files that do fail when checking against the current PACK.xsd
  schema file and thus your pack will cannot be downloaded.


\section cp_LocalInstallation Local Installation
The easiest way to distribute a software pack is attaching it to an email or using other means of electronic distribution
(for example using a company internal file server). The installation of a software pack is usually triggered by
double-clicking the Pack file. The pack management tool is invoked and the Pack is installed on the local machine. After
installation, the Pack will be shown in the list of installed packs (tool dependent). If the PDSC file does not contain a
valid \c \<url\> element, a manual installation is required to update a software pack. Otherwise, pack management tools can
check for updates on the server or the local machine that is specified by \c \<url\>.

\image html LocalInstallation.png "Local installation and update from URL"

\note For automatic updates on a local machine, specify the \c \<url\> using the
<a href="https://en.wikipedia.org/wiki/File_URI_scheme" target="_blank">file URI scheme</a>.


\section cp_WebDownload Web Download

Any web server can be used to host a software pack (specified by the \c \<url\> element in the PDSC file). At this location,
the following files should be present:
-# \elem{vendor}.\elem{name}.pdsc [required]: pack description file.
-# \elem{vendor}.\elem{name}.\elem{version}.pack [required]: pack file where \elem{version} refers to the latest version
   specified in the PDSC file.
-# \elem{vendor}.pidx [optional]: list with all packs hosted and maintained by the vendor (refer to \ref pidxFile)

All previous versions listed in the \elem{releases} section of the PDSC file should be present at the \c \<url\> as well. This
allows users to revert updates or to download a previous version of a software pack (for maintenance purposes).

The \elem{vendor}.pidx allows you to publish multiple packs to a \ref cp_KeilComPack "Pack Index Service".

\section cp_KeilComPack Publish with Pack Index Service

Several companies maintain a Pack Index Server to make packs available within tools or web pages. Once you are ready to deploy packs via such services, you
may send the URL of the \elem{vendor}.\elem{name}.pdsc or \elem{vendor}.pidx file to the following email addresses:

- for Arm and Keil tools and web pages email to <a href="mailto:CMSIS@arm.com">CMSIS@arm.com</a>
- for IAR tools email to <a href="mailto:CMSIS@arm.com">CMSIS@iar.com</a>

The *.pidx file allows you to change pack versions and add packs to your distribution list. All packs that are referenced in the
*.pidx file will be processed and validated. <b>Only packs that pass the
<a href="https://github.com/Open-CMSIS-Pack/devtools/tree/main/tools/packchk">packchk</a> and schema check</b> will become
available via web pages and development tools.

For example, Arm uses the pack information to generate a list of available software packs. The following content will be processed in order to generate
the web site
(<a href="https://developer.arm.com/embedded/cmsis/cmsis-packs" target="_blank">https://developer.arm.com/embedded/cmsis/cmsis-packs</a>):
- Version
- Release Notes
- Devices
- Boards
- Examples
- Software Components

Please allow up to seven working days for the process. If the files contain any errors, you will be notified. Otherwise, the
information is added to the index server.

\section cp_PackRehosting Rehost pack to different URL

Sometimes, it is necessary to rehost a pack (moving a pack from one URL to another). Rehosting implies changing the \elem{url}
element in the PDSC file. To ensure that the pack is found by a \ref cp_KeilComPack "Pack Index Service", follow this procedure:
- Create a new version of the pack: update the \elem{vendor}.\elem{name}.pdsc file with the new \elem{url} ("url_B") and a new
  \ref element_release "\<release\>" tag with an incremented version.
- Place a copy of this latest \elem{vendor}.\elem{name}.pdsc file at url_B and url_A (the original URL).
- Add this new PDSC file to an updated \elem{vendor}.\elem{name}.\elem{version}.pack (needs to match the version number in
  the PDSC file).
- Copy the new \elem{vendor}.\elem{name}.\elem{version}.pack \b only to url_B.
- Copy all previous packs from url_A to url_B (so that they are available at the new location).
- Inform Arm about the new URL by either:
  - updating the \elem{vendor}.pidx with url_B for this pack \em or
  - emailing a link to the new PDSC file if your company does not maintain a \elem{vendor}.pidx

\note
- The PDSC file and all pack versions need to be accessible from the same new URL ("url_B").
- Arm recommends to keep the url_A alive for at least six months so that users have time to pick up the change. Be aware
  that users who have not noticed the change might be unable to find pack updates once url_A have become unavailable.


\section cp_PackRenaming Rename a pack

Sometimes, it is necessary to rename a pack (because the pack vendor and/or its name have changed for example). To ensure
that the pack is found by a \ref cp_KeilComPack "Pack Index Service" and the tools, follow this procedure:
- Create:
  - a new PDSC file with the updated \elem{name} and/or \elem{vendor}, for example NewVendor.NewName.pdsc. The
    \elem{version} should start at 1.0.0.
  - a new pack containing the new PDSC file with the corresponding \elem{name} and/or \elem{vendor}, for example
    NewVendor.NewName.1.0.0.pack.
- Create:
  - a new version of the old PDSC file (Vendor.Name.pdsc) with a new \elem{release} tag (with an updated version),
    containing the \elem{deprecated} and \elem{replacement} element. The latter pointing to the "NewVendor.NewName".
  - a new version of the old \elem{vendor}.\elem{name}.\elem{version}.pack file with the PDSC you have created above.
- Copy:
  - All four files (new PDSC and pack, updated old PDSC and pack) to the URL location.

\note
- Using this approach, you can only do a one-to-one pack replacement.
- If you want to create more than one replacement pack for a given source pack, you need to work with
  \ref element_requirements_pg "requirements".


\section cp_HowWebDownloadWorks Web Infra-structure

Tool, software, or silicon vendors may provide a web infra-structure that lists packs that are available from multiple vendors.
Companies like Arm or IAR provide a \ref cp_KeilComPack "Pack Index Service" that uses either a \elem{vendor}.\elem{name}.pdsc or a
\elem{vendor}.pidx file to obtain the latest pack versions.  This information is used to make the packs available in the development tools (via a <b><a href="https://www.keil.com/mdk5/packinstaller/">Pack Installer</a></b>) and/or to publish information on certain web pages, for example a <b><a href="https://developer.arm.com/embedded/cmsis/cmsis-packs/devices" target="_blank">device list</a></b>.

The following diagram explains how these services are working behind the scene.

\image html WebInstallation.png "Web infra-structure for pack hosting services"

\note
- The \<url\> element in \elem{vendor}.\elem{name}.pdsc is the location where these services check for new packs. At this \<url\> location, an (unversioned) \elem{vendor}.\elem{name}.pdsc file
  and a (versioned) \elem{vendor}.\elem{name}.\elem{version}.pack must be available.
- The \<url\> is the page where the pack is downloaded. This means, if the URL or the PDSC/Pack files become unavailable, users are unable to download the pack.
- When a new PDSC/Pack file is available, it is important to update the version number, otherwise the \ref cp_KeilComPack "Pack Index Service" will not recognize that the pack has changed.
- Previous versions of a (versioned) \elem{vendor}.\elem{name}.\elem{version}.pack should remain available.

Depending on the implementation, the web infra-structure may provide index files with additional information:
 - \elem{vendor}.vidx file (\ref vidxFile) lists pack index locations known by the service. Arm scans these locations every 24 hours to import new packs. If your location is not listed
 - https://www.keil.com/pack/index.pidx is a list of all packs that are correctly imported. If a pack does not appear, the pack did not pass the \ref cp_prerequisites "validation process".

*/
