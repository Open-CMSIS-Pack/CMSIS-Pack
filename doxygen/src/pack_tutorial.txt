/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
/**
\page cp_PackTutorial Pack tutorials

These are the basic steps that are required to create a software pack:

-# <b>Produce input:</b> Create the files that will be delivered with the pack (source code, header and library files,
   documentation).
-# <b>Organize files:</b> For better maintainability, use directories to separate the content of the pack.
-# <b>Create PDSC file:</b> The XML based PDSC file can be created using any text editor. Editors that can
   validate XML code against a schema file help to find bugs early in the pack development stage.
-# <b>Generate pack:</b> Any compression tool supporting the ZIP format can be used to create a pack file.
   <a href="https://github.com/Open-CMSIS-Pack/devtools/tree/main/tools/packchk"><b>packchk</b></a> is
   helpful for the validation of the contents of a pack.

Steps 3 and 4 above are covered automatically if you are using the \ref createPackUtil "gen_pack.sh" script to generate the
pack.

<b>Online tutorials</b>

The <a href="https://github.com/Open-CMSIS-Pack" target="_blank">Open-CMSIS-Pack GitHub presence</a> contains three pack
tutorials that show how to create different types of packs:
- <a href="https://github.com/Open-CMSIS-Pack/SW-Pack-HandsOn" target="_blank">Software pack hands-on</a> - explains the
  steps to create a simple software pack.	 
- <a href="https://github.com/Open-CMSIS-Pack/DFP-Pack-HandsOn" target="_blank">Device family pack hands-on</a> - shows how
  to create a device family pack (DFP).
- <a href="https://github.com/Open-CMSIS-Pack/BSP-Pack-HandsOn" target="_blank">Board support pack hands-on</a> - runs
  through the steps to create a board support pack (BSP).

To work with these tutorials, make sure that you have installed the environment that is required for \ref createPackUtil
as this will be used to verify and create the tutorial packs.
*/
